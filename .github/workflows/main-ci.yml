name: 테스트 및 빌드

on:
  pull_request:
    paths:
      - "service/main-server/**"

jobs:
  test:
    services:
      redis:
        image: redis:7.0.8-alpine
        ports:
          - 6379:6379
      mysql:
        image: mysql:8.0.32
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: test
        ports:
          - 3306:3306
    #        options: >-
    #          --health-cmd="mysqladmin ping -h localhost"
    #          --health-interval=10s
    #          --health-timeout=5s
    #          --health-retries=3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: main application-secret 추가
        env:
          ACTIONS_STEP_DEBUG: true
          APPLICATION_SECRET: ${{ secrets.MAIN_APPLICATION_SECRET }}
        run: echo "$APPLICATION_SECRET" > service/main-server/src/main/resources/application-secret.yml

      - name: queue application-secret 추가
        env:
          ACTIONS_STEP_DEBUG: true
          APPLICATION_SECRET: ${{ secrets.QUEUE_APPLICATION_SECRET }}
        run: echo "$APPLICATION_SECRET" > service/queue-server/src/main/resources/application-secret.yml

      - name: dispatch application-secret 추가
        env:
          ACTIONS_STEP_DEBUG: true
          APPLICATION_SECRET: ${{ secrets.DISPATCH_APPLICATION_SECRET }}
        run: echo "$APPLICATION_SECRET" > service/message-dispatcher/src/main/resources/application-secret.yml

      - name: Run Tests
        run: ./gradlew test


  makeTagAndReleaseServer:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
          draft: false
          prerelease: false


  buildImageAndPushMain:
    permissions:
      contents: read
      packages: write
    name: 도커 이미지 빌드와 푸시
    needs: [ test, makeTagAndReleaseServer ]
    outputs:
      owner_lc: ${{ steps.export_owner.outputs.owner_lc }}
      image_name: ${{ steps.export_image.outputs.image_name }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v3

      - name: 레지스트리 로그인
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set lower case owner name
        id: export_owner
        run: |
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          echo "owner_lc=$OWNER_LC" >> $GITHUB_OUTPUT

      - name: export image name
        id: export_image
        run: echo "image_name=backend-main-deploy" >> $GITHUB_OUTPUT
      - name: 메인 서버 모듈 빌드 앤 푸시
        uses: docker/build-push-action@v6
        with:
          context: .
          file: service/main-server/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.export_owner.outputs.owner_lc }}/backend-main-deploy:${{ needs.makeTagAndReleaseServer.outputs.tag_name }}
            ghcr.io/${{ steps.export_owner.outputs.owner_lc }}/backend-main-deploy:latest